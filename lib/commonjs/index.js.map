{"version":3,"sources":["index.tsx"],"names":["DOUBLE_TAP_SCALE","MAX_SCALE","SPACE_BETWEEN_IMAGES","isAndroid","Platform","OS","useRefs","pan","tap","doubleTap","pinch","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","defaultRenderImage","item","setImageDimensions","e","height","h","width","w","nativeEvent","source","uri","StyleSheet","absoluteFillObject","ResizableImage","React","memo","translateX","index","isFirst","isLast","currentIndex","renderItem","onSwipeToClose","onTap","onDoubleTap","onPanStart","onScaleStart","emptySpaceWidth","doubleTapScale","maxScale","disableTransitionOnScaledImage","hideAdjacentImagesOnScaledImage","disableVerticalSwipe","loop","length","onScaleChange","onScaleChangeRange","setRef","disablePinchToZoom","CENTER","x","y","pinchActive","panActive","offset","scale","translation","origin","adjustedFocal","originalLayout","layout","isActive","scaleReaction","start","end","setAdjustedFocal","focalX","focalY","resetValues","animated","getEdgeX","newWidth","clampY","newScale","newHeight","clampX","getEdgeY","onStart","getPosition","i","getIndexFromPosition","position","round","gestureHandler","ctx","androidPinchActivated","scaleOffset","onActive","s","numberOfPointers","nextScale","onFinish","_","sc","nextTransX","nextTransY","diffX","moved","diffY","singleTapHandler","doubleTapHandler","panHandler","velocityY","velocityX","isVertical","initialTranslateX","translationX","translationY","clampedX","disabledTransition","moveX","edgeY","shouldClose","edgeX","some","snapPoints","snapTo","nextIndex","damping","mass","stiffness","restDisplacementThreshold","restSpeedThreshold","clamp","moveTo","currentScale","translateIndex","diff","reset","animatedStyle","isNextForLast","isPrevForFirst","transform","translateY","portrait","imageHeight","imageWidth","itemProps","GalleryComponent","data","initialIndex","numToRender","onIndexChange","style","keyExtractor","containerDimensions","eventsCallbacks","ref","windowDimensions","dimensions","isLoop","setIndex","refs","current","changeIndex","newIndex","forEach","itemRef","flex","backgroundColor","flexDirection","outOfLoopRenderRange","hidden","id","key","_id","marginLeft","zIndex","Gallery","forwardRef"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n  withDecay,\n  useAnimatedReaction,\n  runOnJS,\n  withSpring,\n  cancelAnimation,\n} from 'react-native-reanimated';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PinchGestureHandler,\n  PinchGestureHandlerEventPayload,\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { useVector } from 'react-native-redash';\nimport { clamp, withDecaySpring, withRubberBandClamp } from './utils';\n\nconst DOUBLE_TAP_SCALE = 3;\nconst MAX_SCALE = 6;\nconst SPACE_BETWEEN_IMAGES = 40;\n\nconst isAndroid = Platform.OS === 'android';\n\nconst useRefs = () => {\n  const pan = useRef();\n  const tap = useRef();\n  const doubleTap = useRef();\n  const pinch = useRef<PinchGestureHandler>();\n\n  return {\n    pan,\n    tap,\n    doubleTap,\n    pinch,\n  };\n};\n\ntype Dimensions = {\n  height: number;\n  width: number;\n};\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n  const point = value + 0.25 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nexport type RenderItemInfo<T> = {\n  index: number;\n  item: T;\n  setImageDimensions: (imageDimensions: Dimensions) => void;\n};\n\nconst defaultRenderImage = ({\n  item,\n  setImageDimensions,\n}: RenderItemInfo<any>) => {\n  return (\n    <Image\n      onLoad={(e) => {\n        const { height: h, width: w } = e.nativeEvent.source;\n        setImageDimensions({ height: h, width: w });\n      }}\n      source={{ uri: item }}\n      resizeMode=\"contain\"\n      style={StyleSheet.absoluteFillObject}\n    />\n  );\n};\n\ntype EventsCallbacks = {\n  onSwipeToClose?: () => void;\n  onTap?: () => void;\n  onDoubleTap?: () => void;\n  onScaleStart?: () => void;\n  onPanStart?: () => void;\n};\n\ntype RenderItem<T> = (\n  imageInfo: RenderItemInfo<T>\n) => React.ReactElement | null;\n\ntype Props<T> = EventsCallbacks & {\n  item: T;\n  index: number;\n  isFirst: boolean;\n  isLast: boolean;\n  translateX: Animated.SharedValue<number>;\n  currentIndex: Animated.SharedValue<number>;\n  renderItem: RenderItem<T>;\n  width: number;\n  height: number;\n  length: number;\n  emptySpaceWidth: number;\n  doubleTapScale: number;\n  maxScale: number;\n  disableTransitionOnScaledImage: boolean;\n  hideAdjacentImagesOnScaledImage: boolean;\n  disableVerticalSwipe: boolean;\n  loop: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n  setRef: (index: number, value: ItemRef) => void;\n  disablePinchToZoom: boolean;\n};\n\ntype ItemRef = { reset: (animated: boolean) => void };\n\nconst ResizableImage = React.memo(\n  <T extends any>({\n    item,\n    translateX,\n    index,\n    isFirst,\n    isLast,\n    currentIndex,\n    renderItem,\n    width,\n    height,\n    onSwipeToClose,\n    onTap,\n    onDoubleTap,\n    onPanStart,\n    onScaleStart,\n    emptySpaceWidth,\n    doubleTapScale,\n    maxScale,\n    disableTransitionOnScaledImage,\n    hideAdjacentImagesOnScaledImage,\n    disableVerticalSwipe,\n    loop,\n    length,\n    onScaleChange,\n    onScaleChangeRange,\n    setRef,\n    disablePinchToZoom,\n  }: Props<T>) => {\n    const CENTER = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    const { pinch, tap, doubleTap, pan } = useRefs();\n\n    const pinchActive = useSharedValue(false);\n\n    const panActive = useSharedValue(false);\n\n    const offset = useVector(0, 0);\n\n    const scale = useSharedValue(1);\n\n    const translation = useVector(0, 0);\n\n    const origin = useVector(0, 0);\n\n    const adjustedFocal = useVector(0, 0);\n\n    const originalLayout = useVector(width, 0);\n    const layout = useVector(width, 0);\n\n    const isActive = useDerivedValue(() => currentIndex.value === index);\n\n    useAnimatedReaction(\n      () => {\n        return scale.value;\n      },\n      (scaleReaction) => {\n        if (!onScaleChange) {\n          return;\n        }\n\n        if (!onScaleChangeRange) {\n          runOnJS(onScaleChange)(scaleReaction);\n          return;\n        }\n\n        if (\n          scaleReaction > onScaleChangeRange.start &&\n          scaleReaction < onScaleChangeRange.end\n        ) {\n          runOnJS(onScaleChange)(scaleReaction);\n        }\n      }\n    );\n\n    const setAdjustedFocal = ({\n      focalX,\n      focalY,\n    }: Record<'focalX' | 'focalY', number>) => {\n      'worklet';\n\n      adjustedFocal.x.value = focalX - (CENTER.x + offset.x.value);\n      adjustedFocal.y.value = focalY - (CENTER.y + offset.y.value);\n    };\n\n    const resetValues = (animated = true) => {\n      'worklet';\n\n      scale.value = animated ? withTiming(1) : 1;\n      offset.x.value = animated ? withTiming(0) : 0;\n      offset.y.value = animated ? withTiming(0) : 0;\n      translation.x.value = animated ? withTiming(0) : 0;\n      translation.y.value = animated ? withTiming(0) : 0;\n    };\n\n    const getEdgeX = () => {\n      'worklet';\n      const newWidth = scale.value * layout.x.value;\n\n      const point = (newWidth - width) / 2;\n\n      if (point < 0) {\n        return [-0, 0];\n      }\n\n      return [-point, point];\n    };\n\n    const clampY = (value: number, newScale: number) => {\n      'worklet';\n      const newHeight = newScale * layout.y.value;\n      const point = (newHeight - height) / 2;\n\n      if (newHeight < height) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const clampX = (value: number, newScale: number) => {\n      'worklet';\n      const newWidth = newScale * layout.x.value;\n      const point = (newWidth - width) / 2;\n\n      if (newWidth < width) {\n        return 0;\n      }\n      return clamp(value, -point, point);\n    };\n\n    const getEdgeY = () => {\n      'worklet';\n\n      const newHeight = scale.value * layout.y.value;\n\n      const point = (newHeight - height) / 2;\n\n      return [-point, point];\n    };\n\n    const onStart = () => {\n      'worklet';\n\n      cancelAnimation(translateX);\n\n      offset.x.value = offset.x.value + translation.x.value;\n      offset.y.value = offset.y.value + translation.y.value;\n\n      translation.x.value = 0;\n      translation.y.value = 0;\n    };\n\n    const getPosition = (i?: number) => {\n      'worklet';\n\n      return (\n        -(width + emptySpaceWidth) * (typeof i !== 'undefined' ? i : index)\n      );\n    };\n\n    const getIndexFromPosition = (position: number) => {\n      'worklet';\n\n      return Math.round(position / -(width + emptySpaceWidth));\n    };\n\n    const gestureHandler = useAnimatedGestureHandler<\n      GestureEvent<PinchGestureHandlerEventPayload>,\n      {\n        scaleOffset: number;\n        androidPinchActivated: boolean;\n      }\n    >(\n      {\n        onStart: ({ focalX, focalY }, ctx) => {\n          if (!isActive.value) return;\n          if (panActive.value && !isAndroid) return;\n\n          pinchActive.value = true;\n\n          if (onScaleStart) {\n            runOnJS(onScaleStart)();\n          }\n\n          if (isAndroid) {\n            ctx.androidPinchActivated = false;\n          }\n\n          onStart();\n\n          ctx.scaleOffset = scale.value;\n\n          setAdjustedFocal({ focalX, focalY });\n\n          origin.x.value = adjustedFocal.x.value;\n          origin.y.value = adjustedFocal.y.value;\n        },\n        onActive: ({ scale: s, focalX, focalY, numberOfPointers }, ctx) => {\n          if (disablePinchToZoom) return;\n          if (!isActive.value) return;\n          if (numberOfPointers !== 2 && !isAndroid) return;\n          if (panActive.value && !isAndroid) return;\n\n          if (!ctx.androidPinchActivated && isAndroid) {\n            setAdjustedFocal({ focalX, focalY });\n\n            origin.x.value = adjustedFocal.x.value;\n            origin.y.value = adjustedFocal.y.value;\n\n            ctx.androidPinchActivated = true;\n          }\n\n          const nextScale = withRubberBandClamp(\n            s * ctx.scaleOffset,\n            0.55,\n            maxScale,\n            [1, maxScale]\n          );\n\n          scale.value = nextScale;\n\n          setAdjustedFocal({ focalX, focalY });\n\n          translation.x.value =\n            adjustedFocal.x.value +\n            ((-1 * nextScale) / ctx.scaleOffset) * origin.x.value;\n          translation.y.value =\n            adjustedFocal.y.value +\n            ((-1 * nextScale) / ctx.scaleOffset) * origin.y.value;\n        },\n        onFinish: (_, ctx) => {\n          if (!isActive.value) return;\n\n          pinchActive.value = false;\n\n          if (scale.value < 1) {\n            resetValues();\n          } else {\n            const sc = Math.min(scale.value, maxScale);\n\n            const newWidth = sc * layout.x.value;\n            const newHeight = sc * layout.y.value;\n\n            const nextTransX =\n              scale.value > maxScale\n                ? adjustedFocal.x.value +\n                  ((-1 * maxScale) / ctx.scaleOffset) * origin.x.value\n                : translation.x.value;\n\n            const nextTransY =\n              scale.value > maxScale\n                ? adjustedFocal.y.value +\n                  ((-1 * maxScale) / ctx.scaleOffset) * origin.y.value\n                : translation.y.value;\n\n            const diffX = nextTransX + offset.x.value - (newWidth - width) / 2;\n\n            if (scale.value > maxScale) {\n              scale.value = withTiming(maxScale);\n            }\n\n            if (newWidth <= width) {\n              translation.x.value = withTiming(0);\n            } else {\n              let moved;\n              if (diffX > 0) {\n                translation.x.value = withTiming(nextTransX - diffX);\n                moved = true;\n              }\n\n              if (newWidth + diffX < width) {\n                translation.x.value = withTiming(\n                  nextTransX + width - (newWidth + diffX)\n                );\n                moved = true;\n              }\n              if (!moved) {\n                translation.x.value = withTiming(nextTransX);\n              }\n            }\n\n            const diffY =\n              nextTransY + offset.y.value - (newHeight - height) / 2;\n\n            if (newHeight <= height) {\n              translation.y.value = withTiming(-offset.y.value);\n            } else {\n              let moved;\n              if (diffY > 0) {\n                translation.y.value = withTiming(nextTransY - diffY);\n                moved = true;\n              }\n\n              if (newHeight + diffY < height) {\n                translation.y.value = withTiming(\n                  nextTransY + height - (newHeight + diffY)\n                );\n                moved = true;\n              }\n              if (!moved) {\n                translation.y.value = withTiming(nextTransY);\n              }\n            }\n          }\n        },\n      },\n      [layout.x, layout.y, index, isFirst, isLast, width, height]\n    );\n\n    const singleTapHandler = useAnimatedGestureHandler<\n      GestureEvent<TapGestureHandlerEventPayload>\n    >({\n      onActive: () => {\n        if (onTap) {\n          runOnJS(onTap)();\n        }\n      },\n    });\n\n    const doubleTapHandler = useAnimatedGestureHandler<\n      GestureEvent<TapGestureHandlerEventPayload>\n    >({\n      onActive: ({ x, y, numberOfPointers }) => {\n        if (!isActive.value) return;\n        if (numberOfPointers !== 1) return;\n\n        if (onDoubleTap) {\n          runOnJS(onDoubleTap)();\n        }\n\n        if (scale.value === 1) {\n          scale.value = withTiming(doubleTapScale);\n\n          setAdjustedFocal({ focalX: x, focalY: y });\n\n          offset.x.value = withTiming(\n            clampX(\n              adjustedFocal.x.value +\n                -1 * doubleTapScale * adjustedFocal.x.value,\n              doubleTapScale\n            )\n          );\n          offset.y.value = withTiming(\n            clampY(\n              adjustedFocal.y.value +\n                -1 * doubleTapScale * adjustedFocal.y.value,\n              doubleTapScale\n            )\n          );\n        } else {\n          resetValues();\n        }\n      },\n    });\n\n    const panHandler = useAnimatedGestureHandler<\n      GestureEvent<PanGestureHandlerEventPayload>,\n      {\n        scaleOffset: number;\n        initialTranslateX: number;\n        isVertical: boolean;\n        shouldClose: boolean;\n      }\n    >(\n      {\n        onStart: ({ velocityY, velocityX }, ctx) => {\n          if (!isActive.value) return;\n          if (pinchActive.value && !isAndroid) return;\n\n          panActive.value = true;\n\n          if (onPanStart) {\n            runOnJS(onPanStart)();\n          }\n\n          onStart();\n          ctx.isVertical = Math.abs(velocityY) > Math.abs(velocityX);\n          ctx.initialTranslateX = translateX.value;\n        },\n        onActive: ({ translationX, translationY, velocityY }, ctx) => {\n          if (!isActive.value) return;\n          if (pinchActive.value && !isAndroid) return;\n          if (disableVerticalSwipe && scale.value === 1 && ctx.isVertical)\n            return;\n\n          const x = getEdgeX();\n\n          if (!ctx.isVertical || scale.value > 1) {\n            const clampedX = clamp(\n              translationX,\n              x[0] - offset.x.value,\n              x[1] - offset.x.value\n            );\n\n            if (\n              hideAdjacentImagesOnScaledImage &&\n              disableTransitionOnScaledImage\n            ) {\n              const disabledTransition =\n                disableTransitionOnScaledImage && scale.value > 1;\n\n              const moveX = withRubberBandClamp(\n                ctx.initialTranslateX + translationX - clampedX,\n                0.55,\n                width,\n                disabledTransition\n                  ? [getPosition(index), getPosition(index + 1)]\n                  : [getPosition(length - 1), 0]\n              );\n\n              if (!disabledTransition) {\n                translateX.value = moveX;\n              }\n              if (disabledTransition) {\n                translation.x.value = clampedX + moveX - translateX.value;\n              } else {\n                translation.x.value = clampedX;\n              }\n            } else {\n              if (loop) {\n                translateX.value =\n                  ctx.initialTranslateX + translationX - clampedX;\n              } else {\n                translateX.value = withRubberBandClamp(\n                  ctx.initialTranslateX + translationX - clampedX,\n                  0.55,\n                  width,\n                  disableTransitionOnScaledImage && scale.value > 1\n                    ? [getPosition(index), getPosition(index + 1)]\n                    : [getPosition(length - 1), 0]\n                );\n              }\n              translation.x.value = clampedX;\n            }\n          }\n\n          const newHeight = scale.value * layout.y.value;\n\n          const edgeY = getEdgeY();\n\n          if (newHeight > height) {\n            translation.y.value = withRubberBandClamp(\n              translationY,\n              0.55,\n              newHeight,\n              [edgeY[0] - offset.y.value, edgeY[1] - offset.y.value]\n            );\n          } else if (\n            !(scale.value === 1 && translateX.value !== getPosition())\n          ) {\n            translation.y.value = translationY;\n          }\n\n          if (ctx.isVertical && newHeight <= height) {\n            ctx.shouldClose = Math.abs(translationY + velocityY * 0.2) > 220;\n          }\n        },\n        onFinish: ({ velocityX, velocityY }, ctx) => {\n          if (!isActive.value) return;\n\n          panActive.value = false;\n\n          const newHeight = scale.value * layout.y.value;\n\n          const edgeX = getEdgeX();\n\n          if (\n            Math.abs(translateX.value - getPosition()) >= 0 &&\n            edgeX.some((x) => x === translation.x.value + offset.x.value)\n          ) {\n            let snapPoints = [index - 1, index, index + 1]\n              .filter((_, y) => {\n                if (loop) return true;\n\n                if (y === 0) {\n                  return !isFirst;\n                }\n                if (y === 2) {\n                  return !isLast;\n                }\n                return true;\n              })\n              .map((i) => getPosition(i));\n\n            if (disableTransitionOnScaledImage && scale.value > 1) {\n              snapPoints = [getPosition(index)];\n            }\n\n            let snapTo = snapPoint(translateX.value, velocityX, snapPoints);\n\n            const nextIndex = getIndexFromPosition(snapTo);\n\n            if (currentIndex.value !== nextIndex) {\n              if (loop) {\n                if (nextIndex === length) {\n                  currentIndex.value = 0;\n                  translateX.value = translateX.value - getPosition(length);\n                  snapTo = 0;\n                } else if (nextIndex === -1) {\n                  currentIndex.value = length - 1;\n                  translateX.value = translateX.value + getPosition(length);\n                  snapTo = getPosition(length - 1);\n                } else {\n                  currentIndex.value = nextIndex;\n                }\n              } else {\n                currentIndex.value = nextIndex;\n              }\n            }\n\n            translateX.value = withSpring(snapTo, {\n              damping: 800,\n              mass: 1,\n              stiffness: 250,\n              restDisplacementThreshold: 0.02,\n              restSpeedThreshold: 4,\n            });\n          } else {\n            const newWidth = scale.value * layout.x.value;\n\n            offset.x.value = withDecaySpring({\n              velocity: velocityX,\n              clamp: [\n                -(newWidth - width) / 2 - translation.x.value,\n                (newWidth - width) / 2 - translation.x.value,\n              ],\n            });\n          }\n\n          if (onSwipeToClose && ctx.shouldClose) {\n            offset.y.value = withDecay({\n              velocity: velocityY,\n            });\n            runOnJS(onSwipeToClose)();\n            return;\n          }\n\n          if (newHeight > height) {\n            offset.y.value = withDecaySpring({\n              velocity: velocityY,\n              clamp: [\n                -(newHeight - height) / 2 - translation.y.value,\n                (newHeight - height) / 2 - translation.y.value,\n              ],\n            });\n          } else {\n            const diffY =\n              translation.y.value + offset.y.value - (newHeight - height) / 2;\n\n            if (newHeight <= height && diffY !== height - diffY - newHeight) {\n              const moveTo = diffY - (height - newHeight) / 2;\n\n              translation.y.value = withTiming(translation.y.value - moveTo);\n            }\n          }\n        },\n      },\n      [layout.x, layout.y, index, isFirst, isLast, loop, width, height]\n    );\n\n    useAnimatedReaction(\n      () => {\n        return {\n          i: currentIndex.value,\n          translateX: translateX.value,\n          currentScale: scale.value,\n        };\n      },\n      ({ i, translateX, currentScale }) => {\n        const translateIndex = translateX / -(width + emptySpaceWidth);\n        if (loop) {\n          let diff = Math.abs((translateIndex % 1) - 0.5);\n          if (diff > 0.5) {\n            diff = 1 - diff;\n          }\n          if (diff > 0.48 && Math.abs(i) !== index) {\n            resetValues(false);\n            return;\n          }\n        }\n        if (Math.abs(i - index) === 2 && currentScale > 1) {\n          resetValues(false);\n        }\n      }\n    );\n\n    useEffect(() => {\n      setRef(index, {\n        reset: (animated: boolean) => resetValues(animated),\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index]);\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const isNextForLast =\n        loop &&\n        isFirst &&\n        currentIndex.value === length - 1 &&\n        translateX.value < getPosition(length - 1);\n      const isPrevForFirst =\n        loop &&\n        isLast &&\n        currentIndex.value === 0 &&\n        translateX.value > getPosition(0);\n      return {\n        transform: [\n          {\n            translateX:\n              offset.x.value +\n              translation.x.value -\n              (isNextForLast ? getPosition(length) : 0) +\n              (isPrevForFirst ? getPosition(length) : 0),\n          },\n          { translateY: offset.y.value + translation.y.value },\n          { scale: scale.value },\n        ],\n      };\n    });\n\n    const setImageDimensions: RenderItemInfo<T>['setImageDimensions'] = ({\n      width: w,\n      height: h,\n    }) => {\n      originalLayout.x.value = w;\n      originalLayout.y.value = h;\n\n      const portrait = width > height;\n\n      if (portrait) {\n        const imageHeight = Math.min((h * width) / w, height);\n        layout.y.value = imageHeight;\n        if (imageHeight === height) {\n          layout.x.value = (w * height) / h;\n        }\n      } else {\n        const imageWidth = Math.min((w * height) / h, width);\n        layout.x.value = imageWidth;\n        if (imageWidth === width) {\n          layout.y.value = (h * width) / w;\n        }\n      }\n    };\n\n    useEffect(() => {\n      setImageDimensions({\n        width: originalLayout.x.value,\n        height: originalLayout.y.value,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width, height]);\n\n    const itemProps: RenderItemInfo<T> = {\n      item,\n      index,\n      setImageDimensions,\n    };\n\n    return (\n      <PanGestureHandler\n        ref={pan}\n        onGestureEvent={panHandler}\n        minDist={10}\n        minPointers={1}\n        maxPointers={1}\n      >\n        <Animated.View style={[{ width, height }]}>\n          <PinchGestureHandler\n            ref={pinch}\n            simultaneousHandlers={[pan]}\n            onGestureEvent={gestureHandler}\n            minPointers={2}\n          >\n            <Animated.View style={{ width, height }}>\n              <TapGestureHandler\n                ref={doubleTap}\n                onGestureEvent={singleTapHandler}\n                waitFor={tap}\n                maxDeltaX={10}\n                maxDeltaY={10}\n              >\n                <Animated.View style={[{ width, height }, animatedStyle]}>\n                  <TapGestureHandler\n                    ref={tap}\n                    onGestureEvent={doubleTapHandler}\n                    numberOfTaps={2}\n                  >\n                    <Animated.View style={{ width, height }}>\n                      {renderItem(itemProps)}\n                    </Animated.View>\n                  </TapGestureHandler>\n                </Animated.View>\n              </TapGestureHandler>\n            </Animated.View>\n          </PinchGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n);\n\nexport type GalleryRef = {\n  setIndex: (newIndex: number) => void;\n  reset: (animated?: boolean) => void;\n};\n\nexport type GalleryReactRef = React.Ref<GalleryRef>;\n\ntype GalleryProps<T> = EventsCallbacks & {\n  ref?: GalleryReactRef;\n  data: T[];\n  renderItem?: RenderItem<T>;\n  keyExtractor?: (item: T, index: number) => string | number;\n  initialIndex?: number;\n  onIndexChange?: (index: number) => void;\n  numToRender?: number;\n  emptySpaceWidth?: number;\n  doubleTapScale?: number;\n  maxScale?: number;\n  style?: ViewStyle;\n  containerDimensions?: { width: number; height: number };\n  disableTransitionOnScaledImage?: boolean;\n  hideAdjacentImagesOnScaledImage?: boolean;\n  disableVerticalSwipe?: boolean;\n  loop?: boolean;\n  onScaleChange?: (scale: number) => void;\n  onScaleChangeRange?: { start: number; end: number };\n  disablePinchToZoom?: boolean;\n};\n\nconst GalleryComponent = <T extends any>(\n  {\n    data,\n    renderItem = defaultRenderImage,\n    initialIndex = 0,\n    numToRender = 5,\n    emptySpaceWidth = SPACE_BETWEEN_IMAGES,\n    doubleTapScale = DOUBLE_TAP_SCALE,\n    maxScale = MAX_SCALE,\n    disableTransitionOnScaledImage = false,\n    hideAdjacentImagesOnScaledImage = false,\n    onIndexChange,\n    style,\n    keyExtractor,\n    containerDimensions,\n    disableVerticalSwipe,\n    loop = false,\n    onScaleChange,\n    onScaleChangeRange,\n    disablePinchToZoom = false,\n    ...eventsCallbacks\n  }: GalleryProps<T>,\n  ref: GalleryReactRef\n) => {\n  const windowDimensions = useWindowDimensions();\n  const dimensions = containerDimensions || windowDimensions;\n\n  const isLoop = loop && data?.length > 1;\n\n  const [index, setIndex] = useState(initialIndex);\n\n  const refs = useRef<ItemRef[]>([]);\n\n  const setRef = useCallback((index: number, value: ItemRef) => {\n    refs.current[index] = value;\n  }, []);\n\n  const translateX = useSharedValue(\n    initialIndex * -(dimensions.width + emptySpaceWidth)\n  );\n\n  const currentIndex = useSharedValue(initialIndex);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: translateX.value }],\n  }));\n\n  const changeIndex = useCallback(\n    (newIndex) => {\n      onIndexChange?.(newIndex);\n      setIndex(newIndex);\n    },\n    [onIndexChange, setIndex]\n  );\n\n  useAnimatedReaction(\n    () => currentIndex.value,\n    (newIndex) => runOnJS(changeIndex)(newIndex),\n    [currentIndex]\n  );\n\n  useEffect(() => {\n    translateX.value = index * -(dimensions.width + emptySpaceWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [windowDimensions]);\n\n  useImperativeHandle(ref, () => ({\n    setIndex(newIndex: number) {\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    },\n    reset(animated = false) {\n      refs.current?.forEach((itemRef) => itemRef.reset(animated));\n    },\n  }));\n\n  useEffect(() => {\n    if (index >= data.length) {\n      const newIndex = data.length - 1;\n      setIndex(newIndex);\n      currentIndex.value = newIndex;\n      translateX.value = newIndex * -(dimensions.width + emptySpaceWidth);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.length]);\n\n  return (\n    <View style={[{ flex: 1, backgroundColor: 'black' }, style]}>\n      <Animated.View style={[{ flex: 1, flexDirection: 'row' }, animatedStyle]}>\n        {data.map((item: any, i) => {\n          const isFirst = i === 0;\n\n          const outOfLoopRenderRange =\n            !isLoop ||\n            (Math.abs(i - index) < data.length - (numToRender - 1) / 2 &&\n              Math.abs(i - index) > (numToRender - 1) / 2);\n\n          const hidden =\n            Math.abs(i - index) > (numToRender - 1) / 2 && outOfLoopRenderRange;\n\n          return (\n            <View\n              key={\n                keyExtractor\n                  ? keyExtractor(item, i)\n                  : item.id || item.key || item._id || item\n              }\n              style={[\n                dimensions,\n                isFirst ? {} : { marginLeft: emptySpaceWidth },\n                { zIndex: index === i ? 1 : 0 },\n              ]}\n            >\n              {hidden ? null : (\n                // @ts-ignore\n                <ResizableImage\n                  {...{\n                    translateX,\n                    item,\n                    currentIndex,\n                    index: i,\n                    isFirst,\n                    isLast: i === data.length - 1,\n                    length: data.length,\n                    renderItem,\n                    emptySpaceWidth,\n                    doubleTapScale,\n                    maxScale,\n                    disableTransitionOnScaledImage,\n                    hideAdjacentImagesOnScaledImage,\n                    disableVerticalSwipe,\n                    loop: isLoop,\n                    onScaleChange,\n                    onScaleChangeRange,\n                    setRef,\n                    disablePinchToZoom,\n                    ...eventsCallbacks,\n                    ...dimensions,\n                  }}\n                />\n              )}\n            </View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst Gallery = React.forwardRef(GalleryComponent) as <T extends any>(\n  p: GalleryProps<T> & { ref?: GalleryReactRef }\n) => React.ReactElement;\n\nexport default Gallery;\n"]}